(function(c){function a(h){var f,g,e=[null];switch(typeof(h)){case"function":f=null;g=h;break;case"object":f=h.scope?h.scope:null;if(h.args){e=e.concat(h.args)}break;default:throw"Invalid callback"}return{scope:f,func:g,args:e}}function d(e){return typeof(e)==="undefined"}var b;(b=function(e){this.init(e||{})}).prototype={init:function(g){var e,k=g.tokens?g.tokens:g,h="g",q,l,j=this.tokenTypes={},m="",p=0,o,i,n,f;for(e in k){q=k[e];l=(q.constructor===RegExp?q:q.pattern).source;if(m.length){m+="|"}m+="("+l+")";l=l.replace(/\\\\/g,"").replace(/\\\(/g,"");o=l.length-l.replace(/\(/g,"").length;j[e]={name:q.name?q.name:e,tokenDef:q,group:++p,groupCount:o};p+=o;if(i=q.attributes){for(n in i){f=i[n];switch(typeof(f)){case"number":i[n]={group:parseInt(f,10)};break;case"function":i[n]={callback:a(f)};break;case"object":break}}}else{q.attributes={text:{group:0}}}}if(g.ignoreCase){h+="i"}this.regexp=new RegExp(m,h);if(!d(g.exclude)){this.exclude(g.exclude)}},text:function(e,g,f){this._text=e;this.regexp.lastIndex=g?g:0;this.to=f?f:e.length},more:function(){return this.regexp.lastIndex<this.to},one:function(){var m=this.regexp.exec(this._text);if(!m){return}var r=m[0],e,o,j,p,s,f=this._exclude,k,g,i,l=this.tokenTypes,h,q,n;for(e in l){o=l[e];p=o.group;if(r!==m[p]){continue}s=o.tokenDef;j=o.name;if(f&&f[j]){return this.one()}h={type:j,at:m.index};k=s.attributes;for(e in k){g=k[e];if(d(g.group)){i=r}else{i=m[p+g.group]}q=g.callback;if(!d(q)){n=q.args;n[0]=i;i=q.func.apply(q.scope,n)}switch(g.type){case"int":i=parseInt(i,10);break;case"float":i=parseFloat(i);break;case"date":i=new Date(i);break;case"boolean":i=i?true:false;break}h[e]=i}break}return h},each:function(h){h=a(h);var g=h.func,e=h.args,f=h.scope;while(this.more()){e[0]=this.one();if(g.apply(f,e)===false){return false}}return true},all:function(){var e=[];this.each(function(g,f){e.push(f)});return e},exclude:function(g){var f;switch(typeof(g)){case"string":(f={})[g]=true;break;case"object":if(g.constructor===Array){f={};for(var h=0,j=g.length,e;h<j;h++){e=g[h];if(typeof(e)!=="string"){throw"Invalid argument."}f[e]=true}}else{f=g}break;case"undefined":f=null;break;default:throw"Invalid argument."}this._exclude=f}};if(typeof(define)==="function"&&!d(define.amd)){define(function(){return b})}else{c.Tokenizer=b}})(typeof(global)==="undefined"?window:global);